{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Documents\\\\\\u05EA\\u05DB\\u05E0\\u05D5\\u05EA \\u05E9\\u05E0\\u05D4 \\u05D1\\\\\\u05E4\\u05E8\\u05E7\\u05D8\\u05D9\\u05E7\\u05D5\\u05D3\\\\ToDoListReact-master\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport service from './service.js';\nfunction ToDo() {\n  /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todoapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, \"todos\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: createTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"new-todo\",\n    placeholder: \"Well, let's take on the day\",\n    value: newTodo,\n    onChange: e => setNewTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main\",\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, todos.map(todo => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: todo.isComplete ? \"completed\" : \"\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"toggle\",\n      type: \"checkbox\",\n      defaultChecked: todo.isComplete,\n      onChange: e => updateCompleted(todo, e.target.checked),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, todo.name), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"destroy\",\n      onClick: () => deleteTodo(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    })));\n  }))));\n}\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n  async function createTodo(e) {\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\"); //clear input\n    await getTodos(); //refresh tasks list (in order to see the new one)\n  }\n\n  async function updateCompleted(todo, isComplete) {\n    await service.setCompleted(todo.id, isComplete);\n    await getTodos(); //refresh tasks list (in order to see the updated one)\n  }\n\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos(); //refresh tasks list\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","service","ToDo","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","createTodo","placeholder","value","newTodo","onChange","e","setNewTodo","target","style","display","todos","map","todo","isComplete","key","id","type","defaultChecked","updateCompleted","checked","name","onClick","deleteTodo","App","setTodos","getTodos","getTasks","preventDefault","addTask","setCompleted","deleteTask","Fragment"],"sources":["D:/Users/Documents/תכנות שנה ב/פרקטיקוד/ToDoListReact-master/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport service from './service.js';\n function ToDo(){\n  <section className=\"todoapp\">\n  <header className=\"header\">\n    <h1>todos</h1>\n    <form onSubmit={createTodo}>\n      <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n    </form>\n  </header>\n  <section className=\"main\" style={{ display: \"block\" }}>\n    <ul className=\"todo-list\">\n      {todos.map(todo => {\n        return (\n          <li className={todo.isComplete ? \"completed\" : \"\"} key={todo.id}>\n            <div className=\"view\">\n              <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\n              <label>{todo.name}</label>\n              <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n</section >\n}\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n\n  async function createTodo(e) {\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\");//clear input\n    await getTodos();//refresh tasks list (in order to see the new one)\n  }\n\n  async function updateCompleted(todo, isComplete) {\n    await service.setCompleted(todo.id, isComplete);\n    await getTodos();//refresh tasks list (in order to see the updated one)\n  }\n\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos();//refresh tasks list\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n \n  return (\n    <>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}